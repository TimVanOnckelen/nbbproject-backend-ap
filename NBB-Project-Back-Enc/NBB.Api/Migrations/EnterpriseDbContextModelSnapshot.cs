// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBB.Api.services;

#nullable disable

namespace NBB.Api.Migrations
{
    [DbContext(typeof(EnterpriseDbContext))]
    partial class EnterpriseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NBB.Api.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Box")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("NBB.Api.Models.Enterprise", b =>
                {
                    b.Property<string>("EnterpriseNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AccountingDataURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("EnterpriseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EnterpriseNumber");

                    b.HasIndex("AddressId");

                    b.ToTable("Enterprise");
                });

            modelBuilder.Entity("NBB.Api.Models.FinancialData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EnterpriseNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.Property<int>("Revenue")
                        .HasColumnType("int");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseNumber");

                    b.ToTable("financialData");
                });

            modelBuilder.Entity("NBB.Api.Models.Enterprise", b =>
                {
                    b.HasOne("NBB.Api.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("NBB.Api.Models.FinancialData", b =>
                {
                    b.HasOne("NBB.Api.Models.Enterprise", null)
                        .WithMany("FinancialDataArray")
                        .HasForeignKey("EnterpriseNumber");
                });

            modelBuilder.Entity("NBB.Api.Models.Enterprise", b =>
                {
                    b.Navigation("FinancialDataArray");
                });
#pragma warning restore 612, 618
        }
    }
}
